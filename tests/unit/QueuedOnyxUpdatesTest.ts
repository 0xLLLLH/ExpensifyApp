import Onyx from 'react-native-onyx';
import {flushQueue} from '@libs/actions/QueuedOnyxUpdates';
import ONYXKEYS from '@src/ONYXKEYS';

let queuedOnyxUpdates = [];

jest.mock('@libs/actions/QueuedOnyxUpdates', () => ({
    isPreservedKeysFilterEnabled: true,
}));
beforeAll(() => {
    Onyx.init({
        keys: ONYXKEYS,
    });
});

afterEach(() => {
    queuedOnyxUpdates = [];
    Onyx.clear();
    jest.clearAllMocks();
});

describe('flushQueue', () => {
    it('should filter queued updates when currentAccountID is undefined', async () => {
        queuedOnyxUpdates = [
            {key: ONYXKEYS.NVP_TRY_FOCUS_MODE, value: true},
            {key: ONYXKEYS.PREFERRED_THEME, value: 'system'},
            {key: ONYXKEYS.NVP_PREFERRED_LOCALE, value: 'en'},
            {
                key: ONYXKEYS.SESSION,
                value: {
                    accountID: 18748326,
                    authToken: 'testToken',
                    email: 'abcd+2342424224@gmail.com',
                    encryptedAuthToken: 'testEncryptedAuthToken',
                    loading: false,
                },
            },
            {key: ONYXKEYS.IS_LOADING_APP, value: false},
            {
                key: ONYXKEYS.CREDENTIALS,
                value: {
                    autoGeneratedLogin: '',
                    autoGeneratedPassword: '',
                    login: 'abcd+2342424224@gmail.com',
                },
            },
            {key: ONYXKEYS.IS_SIDEBAR_LOADED, value: true},
            {key: `${ONYXKEYS.COLLECTION.REPORT}2175919089355165`, value: {reportID: 'reportID'}},
            {
                key: `${ONYXKEYS.COLLECTION.REPORT_ACTIONS}2175919089355165`,
                value: {
                    // eslint-disable-next-line @typescript-eslint/naming-convention
                    '4135522899867010163': {
                        reportActionID: '4135522899867010163',
                    },
                },
            },
        ];

        await Onyx.multiSet({
            [ONYXKEYS.SESSION]: null,
        });

        await flushQueue();

        expect(queuedOnyxUpdates).toEqual([]);
        expect(Onyx.update).toHaveBeenCalledWith([
            {key: ONYXKEYS.NVP_TRY_FOCUS_MODE, value: true},
            {key: ONYXKEYS.PREFERRED_THEME, value: 'system'},
            {key: ONYXKEYS.NVP_PREFERRED_LOCALE, value: 'en'},
            {
                key: ONYXKEYS.SESSION,
                value: {
                    accountID: 18748326,
                    authToken: 'testToken',
                    email: 'abcd+2342424224@gmail.com',
                    encryptedAuthToken: 'testEncryptedAuthToken',
                    loading: false,
                },
            },
            {key: ONYXKEYS.IS_LOADING_APP, value: false},
            {
                key: ONYXKEYS.CREDENTIALS,
                value: {
                    autoGeneratedLogin: '',
                    autoGeneratedPassword: '',
                    login: 'abcd+2342424224@gmail.com',
                },
            },
            {key: ONYXKEYS.IS_SIDEBAR_LOADED, value: true},
        ]);
    });

    it('should not filter queued updates when isPreservedKeysFilterEnabled is false', async () => {
        jest.mock('@libs/actions/QueuedOnyxUpdates', () => ({
            isPreservedKeysFilterEnabled: false,
        }));
        queuedOnyxUpdates = [
            {key: ONYXKEYS.NVP_TRY_FOCUS_MODE, value: true},
            {key: ONYXKEYS.PREFERRED_THEME, value: 'system'},
            {key: ONYXKEYS.NVP_PREFERRED_LOCALE, value: 'en'},
            {
                key: ONYXKEYS.SESSION,
                value: {
                    accountID: 18748326,
                    authToken: 'testToken',
                    email: 'abcd+2342424224@gmail.com',
                    encryptedAuthToken: 'testEncryptedAuthToken',
                    loading: false,
                },
            },
            {key: ONYXKEYS.IS_LOADING_APP, value: false},
            {
                key: ONYXKEYS.CREDENTIALS,
                value: {
                    autoGeneratedLogin: '',
                    autoGeneratedPassword: '',
                    login: 'abcd+2342424224@gmail.com',
                },
            },
            {key: ONYXKEYS.IS_SIDEBAR_LOADED, value: true},
            {key: `${ONYXKEYS.COLLECTION.REPORT}2175919089355165`, value: {reportID: 'reportID'}},
            {
                key: `${ONYXKEYS.COLLECTION.REPORT_ACTIONS}2175919089355165`,
                value: {
                    // eslint-disable-next-line @typescript-eslint/naming-convention
                    '4135522899867010163': {
                        reportActionID: '4135522899867010163',
                    },
                },
            },
        ];

        await flushQueue();

        expect(queuedOnyxUpdates).toEqual([]);
        expect(Onyx.update).toHaveBeenCalledWith(queuedOnyxUpdates);
    });

    it('should not filter updates if currentAccountID is defined', async () => {
        await Onyx.multiSet({
            [ONYXKEYS.SESSION]: {
                accountID: 1,
            },
        });

        queuedOnyxUpdates = [
            {key: ONYXKEYS.NVP_TRY_FOCUS_MODE, value: true},
            {key: ONYXKEYS.PREFERRED_THEME, value: 'system'},
            {key: ONYXKEYS.NVP_PREFERRED_LOCALE, value: 'en'},
            {
                key: ONYXKEYS.SESSION,
                value: {
                    accountID: 18748326,
                    authToken: 'testToken',
                    email: 'abcd+2342424224@gmail.com',
                    encryptedAuthToken: 'testEncryptedAuthToken',
                    loading: false,
                },
            },
            {key: ONYXKEYS.IS_LOADING_APP, value: false},
            {
                key: ONYXKEYS.CREDENTIALS,
                value: {
                    autoGeneratedLogin: '',
                    autoGeneratedPassword: '',
                    login: 'abcd+2342424224@gmail.com',
                },
            },
            {key: ONYXKEYS.IS_SIDEBAR_LOADED, value: true},
            {key: `${ONYXKEYS.COLLECTION.REPORT}2175919089355165`, value: {reportID: 'reportID'}},
            {
                key: `${ONYXKEYS.COLLECTION.REPORT_ACTIONS}2175919089355165`,
                value: {
                    // eslint-disable-next-line @typescript-eslint/naming-convention
                    '4135522899867010163': {
                        reportActionID: '4135522899867010163',
                    },
                },
            },
        ];

        await flushQueue();

        expect(queuedOnyxUpdates).toEqual([]);
        expect(Onyx.update).toHaveBeenCalledWith(queuedOnyxUpdates);
    });
});

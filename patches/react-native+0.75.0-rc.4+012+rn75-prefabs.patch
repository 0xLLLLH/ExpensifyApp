diff --git a/node_modules/react-native/ReactAndroid/build.gradle.kts b/node_modules/react-native/ReactAndroid/build.gradle.kts
index 76d41a6..659196a 100644
--- a/node_modules/react-native/ReactAndroid/build.gradle.kts
+++ b/node_modules/react-native/ReactAndroid/build.gradle.kts
@@ -110,6 +110,18 @@ val preparePrefab by
                       Pair("../ReactCommon/react/renderer/graphics/", "react/renderer/graphics/"),
                       Pair("../ReactCommon/react/renderer/graphics/platform/android/", ""),
                   )),
+              PrefabPreprocessingEntry(
+                  "react_render_consistency",
+                  Pair("../ReactCommon/react/renderer/consistency/", "react/renderer/consistency/")),
+              PrefabPreprocessingEntry(
+                  "react_featureflags",
+                  Pair("../ReactCommon/react/featureflags/", "react/featureflags/")),
+              PrefabPreprocessingEntry(
+                  "react_performance_timeline",
+                  Pair("../ReactCommon/react/performance/timeline/", "react/performance/timeline/")),
+              PrefabPreprocessingEntry(
+                  "react_render_observers_events",
+                  Pair("../ReactCommon/react/renderer/observers/events/", "react/renderer/observers/events/")),
               PrefabPreprocessingEntry(
                   "rrc_root",
                   Pair(
@@ -694,6 +706,18 @@ android {
     create("react_render_graphics") {
       headers = File(prefabHeadersDir, "react_render_graphics").absolutePath
     }
+    create("react_render_consistency") {
+      headers = File(prefabHeadersDir, "react_render_consistency").absolutePath
+    }
+    create("react_featureflags") {
+      headers = File(prefabHeadersDir, "react_featureflags").absolutePath
+    }
+    create("react_performance_timeline") {
+      headers = File(prefabHeadersDir, "react_performance_timeline").absolutePath
+    }
+    create("react_render_observers_events") {
+      headers = File(prefabHeadersDir, "react_render_observers_events").absolutePath
+    }
     create("rrc_image") { headers = File(prefabHeadersDir, "rrc_image").absolutePath }
     create("rrc_root") { headers = File(prefabHeadersDir, "rrc_root").absolutePath }
     create("rrc_view") { headers = File(prefabHeadersDir, "rrc_view").absolutePath }
diff --git a/node_modules/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake b/node_modules/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake
index 468b5c1..de13935 100644
--- a/node_modules/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake
+++ b/node_modules/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake
@@ -87,6 +87,11 @@ add_library(react_nativemodule_core ALIAS ReactAndroid::react_nativemodule_core)
 add_library(react_render_imagemanager ALIAS ReactAndroid::react_render_imagemanager)
 add_library(rrc_image ALIAS ReactAndroid::rrc_image)
 add_library(rrc_legacyviewmanagerinterop ALIAS ReactAndroid::rrc_legacyviewmanagerinterop)
+add_library(reactnativejni ALIAS ReactAndroid::reactnativejni)
+add_library(react_render_consistency ALIAS ReactAndroid::react_render_consistency)
+add_library(react_performance_timeline ALIAS ReactAndroid::react_performance_timeline)
+add_library(react_render_observers_events ALIAS ReactAndroid::react_render_observers_events)
+add_library(react_featureflags ALIAS ReactAndroid::react_featureflags)
 
 find_package(fbjni REQUIRED CONFIG)
 add_library(fbjni ALIAS fbjni::fbjni)

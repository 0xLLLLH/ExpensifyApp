diff --git a/node_modules/react-native-screens/android/src/fabric/java/com/swmansion/rnscreens/FabricEnabledViewGroup.kt b/node_modules/react-native-screens/android/src/fabric/java/com/swmansion/rnscreens/FabricEnabledViewGroup.kt
index 2912a13..b38895e 100644
--- a/node_modules/react-native-screens/android/src/fabric/java/com/swmansion/rnscreens/FabricEnabledViewGroup.kt
+++ b/node_modules/react-native-screens/android/src/fabric/java/com/swmansion/rnscreens/FabricEnabledViewGroup.kt
@@ -5,29 +5,37 @@ import androidx.annotation.UiThread
 import com.facebook.react.bridge.ReactContext
 import com.facebook.react.bridge.WritableMap
 import com.facebook.react.bridge.WritableNativeMap
-import com.facebook.react.uimanager.FabricViewStateManager
 import com.facebook.react.uimanager.PixelUtil
+import com.facebook.react.uimanager.StateWrapper
 import kotlin.math.abs
 
-abstract class FabricEnabledViewGroup constructor(context: ReactContext?) : ViewGroup(context), FabricViewStateManager.HasFabricViewStateManager {
-    private val mFabricViewStateManager: FabricViewStateManager = FabricViewStateManager()
+abstract class FabricEnabledViewGroup(
+    context: ReactContext?,
+) : ViewGroup(context) {
+    private var mStateWrapper: StateWrapper? = null
 
     private var lastSetWidth = 0f
     private var lastSetHeight = 0f
 
-    override fun getFabricViewStateManager(): FabricViewStateManager {
-        return mFabricViewStateManager
+    fun setStateWrapper(wrapper: StateWrapper?) {
+        mStateWrapper = wrapper
     }
 
-    protected fun updateScreenSizeFabric(width: Int, height: Int, headerHeight: Double) {
+    protected fun updateScreenSizeFabric(
+        width: Int,
+        height: Int,
+        headerHeight: Double,
+    ) {
         updateState(width, height, headerHeight)
     }
-
     @UiThread
-    fun updateState(width: Int, height: Int, headerHeight: Double) {
+    fun updateState(
+        width: Int,
+        height: Int,
+        headerHeight: Double,
+    ) {
         val realWidth: Float = PixelUtil.toDIPFromPixel(width.toFloat())
         val realHeight: Float = PixelUtil.toDIPFromPixel(height.toFloat())
-
         // Check incoming state values. If they're already the correct value, return early to prevent
         // infinite UpdateState/SetState loop.
         val delta = 0.9f
@@ -39,14 +47,11 @@ abstract class FabricEnabledViewGroup constructor(context: ReactContext?) : View
 
         lastSetWidth = realWidth
         lastSetHeight = realHeight
-
-        mFabricViewStateManager.setState {
-            val map: WritableMap = WritableNativeMap()
-            map.putDouble("frameWidth", realWidth.toDouble())
-            map.putDouble("frameHeight", realHeight.toDouble())
-            map.putDouble("contentOffsetX", 0.0)
-            map.putDouble("contentOffsetY", headerHeight)
-            map
-        }
+        val map: WritableMap = WritableNativeMap()
+        map.putDouble("frameWidth", realWidth.toDouble())
+        map.putDouble("frameHeight", realHeight.toDouble())
+        map.putDouble("contentOffsetX", 0.0)
+        map.putDouble("contentOffsetY", headerHeight)
+        mStateWrapper?.updateState(map)
     }
 }
diff --git a/node_modules/react-native-screens/android/src/main/java/com/swmansion/rnscreens/ScreenViewManager.kt b/node_modules/react-native-screens/android/src/main/java/com/swmansion/rnscreens/ScreenViewManager.kt
index c45adc0..9fa52f0 100644
--- a/node_modules/react-native-screens/android/src/main/java/com/swmansion/rnscreens/ScreenViewManager.kt
+++ b/node_modules/react-native-screens/android/src/main/java/com/swmansion/rnscreens/ScreenViewManager.kt
@@ -44,7 +44,7 @@ open class ScreenViewManager : ViewGroupManager<Screen>(), RNSScreenManagerInter
     ): Any? {
         if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {
             // fabricViewStateManager should never be null in Fabric. The null check is only for Paper's empty impl.
-            view.fabricViewStateManager?.setStateWrapper(stateWrapper)
+            view.setStateWrapper(stateWrapper)
         }
         return super.updateState(view, props, stateWrapper)
     }
diff --git a/node_modules/react-native-screens/android/src/paper/java/com/swmansion/rnscreens/FabricEnabledViewGroup.kt b/node_modules/react-native-screens/android/src/paper/java/com/swmansion/rnscreens/FabricEnabledViewGroup.kt
index 917c18d..45c058c 100644
--- a/node_modules/react-native-screens/android/src/paper/java/com/swmansion/rnscreens/FabricEnabledViewGroup.kt
+++ b/node_modules/react-native-screens/android/src/paper/java/com/swmansion/rnscreens/FabricEnabledViewGroup.kt
@@ -2,11 +2,12 @@ package com.swmansion.rnscreens
 
 import android.view.ViewGroup
 import com.facebook.react.bridge.ReactContext
-import com.facebook.react.uimanager.FabricViewStateManager
+import com.facebook.react.uimanager.StateWrapper
 
-abstract class FabricEnabledViewGroup constructor(context: ReactContext?) : ViewGroup(context) {
-
-    val fabricViewStateManager get() = null as FabricViewStateManager?
+abstract class FabricEnabledViewGroup(
+    context: ReactContext?,
+) : ViewGroup(context) {
+    fun setStateWrapper(wrapper: StateWrapper?) = Unit
 
     protected fun updateScreenSizeFabric(width: Int, height: Int, headerHeight: Double) {
         // do nothing
diff --git a/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSModalScreenShadowNode.cpp b/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSModalScreenShadowNode.cpp
index 1de0596..2e58691 100644
--- a/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSModalScreenShadowNode.cpp
+++ b/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSModalScreenShadowNode.cpp
@@ -5,7 +5,8 @@ namespace react {
 
 extern const char RNSModalScreenComponentName[] = "RNSModalScreen";
 
-Point RNSModalScreenShadowNode::getContentOriginOffset() const {
+Point RNSModalScreenShadowNode::getContentOriginOffset(
+    bool /*includeTransform*/) const {
   auto stateData = getStateData();
   auto contentOffset = stateData.contentOffset;
   return {contentOffset.x, contentOffset.y};
diff --git a/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSModalScreenShadowNode.h b/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSModalScreenShadowNode.h
index 67709d9..05ffb81 100644
--- a/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSModalScreenShadowNode.h
+++ b/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSModalScreenShadowNode.h
@@ -19,7 +19,7 @@ class JSI_EXPORT RNSModalScreenShadowNode final : public ConcreteViewShadowNode<
  public:
   using ConcreteViewShadowNode::ConcreteViewShadowNode;
 
-  Point getContentOriginOffset() const override;
+  Point getContentOriginOffset(bool includeTransform) const override;
   static ShadowNodeTraits BaseTraits() {
     auto traits = ConcreteViewShadowNode::BaseTraits();
     traits.set(ShadowNodeTraits::Trait::RootNodeKind);
diff --git a/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.cpp b/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.cpp
index 0e3746e..f631413 100644
--- a/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.cpp
+++ b/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.cpp
@@ -5,7 +5,8 @@ namespace react {
 
 extern const char RNSScreenComponentName[] = "RNSScreen";
 
-Point RNSScreenShadowNode::getContentOriginOffset() const {
+Point RNSScreenShadowNode::getContentOriginOffset(
+    bool /*includeTransform*/) const {
   auto stateData = getStateData();
   auto contentOffset = stateData.contentOffset;
   return {contentOffset.x, contentOffset.y};
diff --git a/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.h b/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.h
index 25b6442..587c229 100644
--- a/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.h
+++ b/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.h
@@ -19,7 +19,7 @@ class JSI_EXPORT RNSScreenShadowNode final : public ConcreteViewShadowNode<
  public:
   using ConcreteViewShadowNode::ConcreteViewShadowNode;
 
-  Point getContentOriginOffset() const override;
+  Point getContentOriginOffset(bool includeTransform) const override;
 };
 
 } // namespace react

diff --git a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/AbstractEventEmitter.kt b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/AbstractEventEmitter.kt
index 9542502..d46bf9a 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/AbstractEventEmitter.kt
+++ b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/AbstractEventEmitter.kt
@@ -56,7 +56,7 @@ abstract class AbstractEventEmitter<T : ViewGroup?>(reactApplicationContext: Rea
         }
     }
 
-    override fun addEventEmitters(context: ThemedReactContext, view: T) {
+    override fun addEventEmitters(context: ThemedReactContext, view: T & Any) {
         mEventDispatcher = UIManagerHelper.getEventDispatcherForReactTag(context, view!!.id)
     }
 
diff --git a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/annotation/RNMBXPointAnnotationModule.kt b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/annotation/RNMBXPointAnnotationModule.kt
index 3126157..77b31ca 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/annotation/RNMBXPointAnnotationModule.kt
+++ b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/annotation/RNMBXPointAnnotationModule.kt
@@ -5,6 +5,7 @@ import com.facebook.react.bridge.ReactApplicationContext
 import com.facebook.react.bridge.ReactMethod
 import com.facebook.react.module.annotations.ReactModule
 import com.rnmapbox.rnmbx.NativeRNMBXPointAnnotationModuleSpec
+import com.rnmapbox.rnmbx.utils.ViewRefTag
 import com.rnmapbox.rnmbx.utils.ViewTagResolver
 
 @ReactModule(name = RNMBXPointAnnotationModule.NAME)
@@ -15,7 +16,7 @@ class RNMBXPointAnnotationModule(reactContext: ReactApplicationContext?, private
         const val NAME = "RNMBXPointAnnotationModule"
     }
 
-    private fun withPointAnnotationOnUIThread(viewRef: Double?, reject: Promise, fn: (RNMBXPointAnnotation) -> Unit) {
+    private fun withPointAnnotationOnUIThread(viewRef: ViewRefTag?, reject: Promise, fn: (RNMBXPointAnnotation) -> Unit) {
         if (viewRef == null) {
             reject.reject(Exception("viewRef is null for RNMBXPointAnnotation"))
         } else {
@@ -24,7 +25,7 @@ class RNMBXPointAnnotationModule(reactContext: ReactApplicationContext?, private
     }
 
     @ReactMethod
-    override fun refresh(viewRef: Double?, promise: Promise) {
+    override fun refresh(viewRef: ViewRefTag?, promise: Promise) {
         withPointAnnotationOnUIThread(viewRef, promise) {
             it.refresh()
             promise.resolve(null)
diff --git a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/camera/RNMBXCamera.kt b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/camera/RNMBXCamera.kt
index bf149f9..2d3441b 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/camera/RNMBXCamera.kt
+++ b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/camera/RNMBXCamera.kt
@@ -190,7 +190,7 @@ class RNMBXCamera(private val mContext: Context, private val mManager: RNMBXCame
 
     private fun setInitialCamera() {
         mDefaultStop?.let {
-            val mapView = mMapView!!
+            val mapView = mMapView ?: return
             val map = mapView.getMapboxMap()
 
             it.setDuration(0)
diff --git a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/camera/RNMBXCameraModule.kt b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/camera/RNMBXCameraModule.kt
index a07e67f..0c9f710 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/camera/RNMBXCameraModule.kt
+++ b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/camera/RNMBXCameraModule.kt
@@ -9,12 +9,13 @@ import com.facebook.react.bridge.WritableMap
 import com.facebook.react.bridge.WritableNativeMap
 import com.rnmapbox.rnmbx.NativeRNMBXCameraModuleSpec
 import com.rnmapbox.rnmbx.components.mapview.CommandResponse
+import com.rnmapbox.rnmbx.utils.ViewRefTag
 import com.rnmapbox.rnmbx.utils.ViewTagResolver
 
 
 class RNMBXCameraModule(context: ReactApplicationContext, val viewTagResolver: ViewTagResolver) : NativeRNMBXCameraModuleSpec(context) {
     private fun withViewportOnUIThread(
-        viewRef: Double?,
+        viewRef: ViewRefTag?,
         reject: Promise,
         fn: (RNMBXCamera) -> Unit
     ) {
@@ -42,7 +43,7 @@ class RNMBXCameraModule(context: ReactApplicationContext, val viewTagResolver: V
       const val NAME = "RNMBXCameraModule"
     }
 
-    override fun updateCameraStop(viewRef: Double?, stop: ReadableMap, promise: Promise) {
+    override fun updateCameraStop(viewRef: ViewRefTag?, stop: ReadableMap, promise: Promise) {
         withViewportOnUIThread(viewRef, promise) {
             it.updateCameraStop(stop)
             promise.resolve(null)
diff --git a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/camera/RNMBXViewportModule.kt b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/camera/RNMBXViewportModule.kt
index 752cfbd..6d18cdb 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/camera/RNMBXViewportModule.kt
+++ b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/camera/RNMBXViewportModule.kt
@@ -8,11 +8,12 @@ import com.facebook.react.bridge.WritableMap
 import com.facebook.react.bridge.WritableNativeMap
 import com.rnmapbox.rnmbx.NativeRNMBXViewportModuleSpec
 import com.rnmapbox.rnmbx.components.mapview.CommandResponse
+import com.rnmapbox.rnmbx.utils.ViewRefTag
 import com.rnmapbox.rnmbx.utils.ViewTagResolver
 
 class RNMBXViewportModule(context: ReactApplicationContext, val viewTagResolver: ViewTagResolver) : NativeRNMBXViewportModuleSpec(context) {
     private fun withViewportOnUIThread(
-        viewRef: Double?,
+        viewRef: ViewRefTag?,
         reject: Promise,
         fn: (RNMBXViewport) -> Unit
     ) {
@@ -36,14 +37,14 @@ class RNMBXViewportModule(context: ReactApplicationContext, val viewTagResolver:
         }
     }
 
-    override fun getState(viewRef: Double?, promise: Promise) {
+    override fun getState(viewRef: ViewRefTag?, promise: Promise) {
         withViewportOnUIThread(viewRef, promise) {
             promise.resolve(it.getState())
         }
     }
 
     override fun transitionTo(
-        viewRef: Double?,
+        viewRef: ViewRefTag?,
         state: ReadableMap,
         transition: ReadableMap?,
         promise: Promise
@@ -53,7 +54,7 @@ class RNMBXViewportModule(context: ReactApplicationContext, val viewTagResolver:
         }
     }
 
-    override fun idle(viewRef: Double?, promise: Promise) {
+    override fun idle(viewRef: ViewRefTag?, promise: Promise) {
         withViewportOnUIThread(viewRef, promise) {
             it.idle()
             promise.resolve(true)
diff --git a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/images/RNMBXImageModule.kt b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/images/RNMBXImageModule.kt
index a9bcd66..91dace3 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/images/RNMBXImageModule.kt
+++ b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/images/RNMBXImageModule.kt
@@ -5,6 +5,7 @@ import com.facebook.react.bridge.ReactApplicationContext
 import com.facebook.react.bridge.ReactMethod
 import com.facebook.react.module.annotations.ReactModule
 import com.rnmapbox.rnmbx.NativeRNMBXImageModuleSpec
+import com.rnmapbox.rnmbx.utils.ViewRefTag
 import com.rnmapbox.rnmbx.utils.ViewTagResolver
 
 @ReactModule(name = RNMBXImageModule.NAME)
@@ -15,7 +16,7 @@ class RNMBXImageModule(reactContext: ReactApplicationContext?, private val viewT
         const val NAME = "RNMBXImageModule"
     }
 
-    private fun withImageOnUIThread(viewRef: Double?, reject: Promise, fn: (RNMBXImage) -> Unit) {
+    private fun withImageOnUIThread(viewRef: ViewRefTag?, reject: Promise, fn: (RNMBXImage) -> Unit) {
         if (viewRef == null) {
             reject.reject(Exception("viewRef is null for RNMBXImage"))
         } else {
@@ -24,7 +25,7 @@ class RNMBXImageModule(reactContext: ReactApplicationContext?, private val viewT
     }
 
     @ReactMethod
-    override fun refresh(viewRef: Double?, promise: Promise) {
+    override fun refresh(viewRef: ViewRefTag?, promise: Promise) {
         withImageOnUIThread(viewRef, promise) {
             it.refresh()
             promise.resolve(null)
diff --git a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/mapview/NativeMapViewModule.kt b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/mapview/NativeMapViewModule.kt
index 17b4b9f..4115802 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/mapview/NativeMapViewModule.kt
+++ b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/mapview/NativeMapViewModule.kt
@@ -8,13 +8,14 @@ import com.facebook.react.bridge.WritableNativeMap
 import com.rnmapbox.rnmbx.NativeMapViewModuleSpec
 import com.rnmapbox.rnmbx.utils.ConvertUtils
 import com.rnmapbox.rnmbx.utils.ExpressionParser
+import com.rnmapbox.rnmbx.utils.ViewRefTag
 import com.rnmapbox.rnmbx.utils.ViewTagResolver
 import com.rnmapbox.rnmbx.utils.extensions.toCoordinate
 import com.rnmapbox.rnmbx.utils.extensions.toScreenCoordinate
 
 class NativeMapViewModule(context: ReactApplicationContext, val viewTagResolver: ViewTagResolver) : NativeMapViewModuleSpec(context) {
     private fun withMapViewOnUIThread(
-        viewRef: Double?,
+        viewRef: ViewRefTag?,
         reject: Promise,
         fn: (RNMBXMapView) -> Unit
     ) {
@@ -38,14 +39,14 @@ class NativeMapViewModule(context: ReactApplicationContext, val viewTagResolver:
         }
     }
 
-    override fun takeSnap(viewRef: Double?, writeToDisk: Boolean, promise: Promise) {
+    override fun takeSnap(viewRef: ViewRefTag?, writeToDisk: Boolean, promise: Promise) {
         withMapViewOnUIThread(viewRef, promise) {
             it.takeSnap(writeToDisk, createCommandResponse(promise))
         }
     }
 
     override fun queryTerrainElevation(
-        viewRef: Double?,
+        viewRef: ViewRefTag?,
         coordinates: ReadableArray,
         promise: Promise
     ) {
@@ -55,7 +56,7 @@ class NativeMapViewModule(context: ReactApplicationContext, val viewTagResolver:
     }
 
     override fun setSourceVisibility(
-        viewRef: Double?,
+        viewRef: ViewRefTag?,
         visible: Boolean,
         sourceId: String,
         sourceLayerId: String?,
@@ -68,14 +69,14 @@ class NativeMapViewModule(context: ReactApplicationContext, val viewTagResolver:
         }
     }
 
-    override fun getCenter(viewRef: Double?, promise: Promise) {
+    override fun getCenter(viewRef: ViewRefTag?, promise: Promise) {
         withMapViewOnUIThread(viewRef, promise) {
             it.getCenter(createCommandResponse(promise))
         }
     }
 
     override fun getCoordinateFromView(
-        viewRef: Double?,
+        viewRef: ViewRefTag?,
         atPoint: ReadableArray,
         promise: Promise
     ) {
@@ -84,26 +85,26 @@ class NativeMapViewModule(context: ReactApplicationContext, val viewTagResolver:
         }
     }
 
-    override fun getPointInView(viewRef: Double?, atCoordinate: ReadableArray, promise: Promise) {
+    override fun getPointInView(viewRef: ViewRefTag?, atCoordinate: ReadableArray, promise: Promise) {
         withMapViewOnUIThread(viewRef, promise) {
             it.getPointInView(atCoordinate.toCoordinate(), createCommandResponse(promise))
         }
     }
 
-    override fun getZoom(viewRef: Double?, promise: Promise) {
+    override fun getZoom(viewRef: ViewRefTag?, promise: Promise) {
         withMapViewOnUIThread(viewRef, promise) {
             it.getZoom(createCommandResponse(promise))
         }
     }
 
-    override fun getVisibleBounds(viewRef: Double?, promise: Promise) {
+    override fun getVisibleBounds(viewRef: ViewRefTag?, promise: Promise) {
         withMapViewOnUIThread(viewRef, promise) {
             it.getVisibleBounds(createCommandResponse(promise))
         }
     }
 
     override fun queryRenderedFeaturesAtPoint(
-        viewRef: Double?,
+        viewRef: ViewRefTag?,
         atPoint: ReadableArray,
         withFilter: ReadableArray,
         withLayerIDs: ReadableArray,
@@ -122,7 +123,7 @@ class NativeMapViewModule(context: ReactApplicationContext, val viewTagResolver:
     }
 
     override fun queryRenderedFeaturesInRect(
-        viewRef: Double?,
+        viewRef: ViewRefTag?,
         withBBox: ReadableArray,
         withFilter: ReadableArray,
         withLayerIDs: ReadableArray?,
@@ -141,7 +142,7 @@ class NativeMapViewModule(context: ReactApplicationContext, val viewTagResolver:
     }
 
     override fun setHandledMapChangedEvents(
-        viewRef: Double?,
+        viewRef: ViewRefTag?,
         events: ReadableArray,
         promise: Promise
     ) {
@@ -151,14 +152,14 @@ class NativeMapViewModule(context: ReactApplicationContext, val viewTagResolver:
         }
     }
 
-    override fun clearData(viewRef: Double?, promise: Promise) {
+    override fun clearData(viewRef: ViewRefTag?, promise: Promise) {
         withMapViewOnUIThread(viewRef, promise) {
             it.clearData(createCommandResponse(promise))
         }
     }
 
     override fun querySourceFeatures(
-        viewRef: Double?,
+        viewRef: ViewRefTag?,
         sourceId: String,
         withFilter: ReadableArray,
         withSourceLayerIDs: ReadableArray,
diff --git a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/styles/sources/RNMBXShapeSourceModule.kt b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/styles/sources/RNMBXShapeSourceModule.kt
index e8f9891..6398497 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/styles/sources/RNMBXShapeSourceModule.kt
+++ b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/components/styles/sources/RNMBXShapeSourceModule.kt
@@ -9,6 +9,7 @@ import com.facebook.react.uimanager.common.UIManagerType
 import com.rnmapbox.rnmbx.BuildConfig
 import com.rnmapbox.rnmbx.NativeRNMBXShapeSourceModuleSpec
 import com.rnmapbox.rnmbx.components.mapview.RNMBXMapView
+import com.rnmapbox.rnmbx.utils.ViewRefTag
 import com.rnmapbox.rnmbx.utils.ViewTagResolver
 
 @ReactModule(name = RNMBXShapeSourceModule.NAME)
@@ -16,7 +17,7 @@ class RNMBXShapeSourceModule(reactContext: ReactApplicationContext?, private val
     NativeRNMBXShapeSourceModuleSpec(reactContext) {
 
 
-    private fun withShapeSourceOnUIThread(viewRef: Double?, reject: Promise, fn: (RNMBXShapeSource) -> Unit) {
+    private fun withShapeSourceOnUIThread(viewRef: ViewRefTag?, reject: Promise, fn: (RNMBXShapeSource) -> Unit) {
         if (viewRef == null) {
             reject.reject(Exception("viewRef is null for RNMBXShapeSource"))
         } else {
@@ -30,7 +31,7 @@ class RNMBXShapeSourceModule(reactContext: ReactApplicationContext?, private val
 
     @ReactMethod
     override fun getClusterExpansionZoom(
-        viewRef: Double?,
+        viewRef: ViewRefTag?,
         featureJSON: String,
         promise: Promise
     ) {
@@ -41,10 +42,10 @@ class RNMBXShapeSourceModule(reactContext: ReactApplicationContext?, private val
 
     @ReactMethod
     override fun getClusterLeaves(
-        viewRef: Double?,
+        viewRef: ViewRefTag?,
         featureJSON: String,
-        number: Double,
-        offset: Double,
+        number: Int,
+        offset: Int,
         promise: Promise
     ) {
         withShapeSourceOnUIThread(viewRef, promise) {
@@ -53,7 +54,7 @@ class RNMBXShapeSourceModule(reactContext: ReactApplicationContext?, private val
     }
 
     @ReactMethod
-    override fun getClusterChildren(viewRef: Double?, featureJSON: String, promise: Promise) {
+    override fun getClusterChildren(viewRef: ViewRefTag?, featureJSON: String, promise: Promise) {
         withShapeSourceOnUIThread(viewRef, promise) {
             it.getClusterChildren(featureJSON, promise)
         }
diff --git a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/shapeAnimators/RNMBXChangeLineOffsetsShapeAnimatorModule.kt b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/shapeAnimators/RNMBXChangeLineOffsetsShapeAnimatorModule.kt
index 755ab5e..28d1020 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/shapeAnimators/RNMBXChangeLineOffsetsShapeAnimatorModule.kt
+++ b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/shapeAnimators/RNMBXChangeLineOffsetsShapeAnimatorModule.kt
@@ -11,6 +11,7 @@ import com.mapbox.turf.TurfConstants.UNIT_METERS
 import com.mapbox.turf.TurfMeasurement
 import com.mapbox.turf.TurfMisc
 import com.rnmapbox.rnmbx.NativeRNMBXChangeLineOffsetsShapeAnimatorModuleSpec
+import com.rnmapbox.rnmbx.utils.ViewRefTag
 
 class ChangeLineOffsetsShapeAnimator(tag: Tag, _lineString: LineString, startOffset: Double, endOffset: Double): ShapeAnimatorCommon(tag) {
     private var lineString = _lineString
@@ -153,7 +154,7 @@ class RNMBXChangeLineOffsetsShapeAnimatorModule(
     }
 
     override fun create(
-        tag: Double,
+        tag: ViewRefTag,
         coordinates: ReadableArray,
         startOffset: Double,
         endOffset: Double,
@@ -172,11 +173,11 @@ class RNMBXChangeLineOffsetsShapeAnimatorModule(
         promise?.resolve(tag.toInt())
     }
 
-    private fun getAnimator(tag: Double): ChangeLineOffsetsShapeAnimator {
+    private fun getAnimator(tag: ViewRefTag): ChangeLineOffsetsShapeAnimator {
         return shapeAnimatorManager.get(tag.toLong()) as ChangeLineOffsetsShapeAnimator
     }
 
-    override fun setLineString(tag: Double, coordinates: ReadableArray?, startOffset: Double, endOffset: Double, promise: Promise?) {
+    override fun setLineString(tag: ViewRefTag, coordinates: ReadableArray?, startOffset: Double, endOffset: Double, promise: Promise?) {
         val animator = getAnimator(tag)
 
         if (coordinates == null) {
@@ -191,13 +192,13 @@ class RNMBXChangeLineOffsetsShapeAnimatorModule(
         promise?.resolve(true)
     }
 
-    override fun setStartOffset(tag: Double, offset: Double, duration: Double, promise: Promise?) {
+    override fun setStartOffset(tag: ViewRefTag, offset: Double, duration: Double, promise: Promise?) {
         val animator = getAnimator(tag)
         animator.setStartOffset(offset, duration / 1000)
         promise?.resolve(true)
     }
 
-    override fun setEndOffset(tag: Double, offset: Double, duration: Double, promise: Promise?) {
+    override fun setEndOffset(tag: ViewRefTag, offset: Double, duration: Double, promise: Promise?) {
         val animator = getAnimator(tag)
         animator.setEndOffset(offset, duration / 1000)
         promise?.resolve(true)
diff --git a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/shapeAnimators/RNMBXMovePointShapeAnimatorModule.kt b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/shapeAnimators/RNMBXMovePointShapeAnimatorModule.kt
index 436ba24..5d486d6 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/shapeAnimators/RNMBXMovePointShapeAnimatorModule.kt
+++ b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/shapeAnimators/RNMBXMovePointShapeAnimatorModule.kt
@@ -11,6 +11,7 @@ import com.mapbox.geojson.Point
 import com.mapbox.turf.TurfConstants.UNIT_METERS
 import com.mapbox.turf.TurfMeasurement
 import com.rnmapbox.rnmbx.NativeRNMBXMovePointShapeAnimatorModuleSpec
+import com.rnmapbox.rnmbx.utils.ViewRefTag
 
 class MovePointShapeAnimator(tag: Tag, coordinate: Point) : ShapeAnimatorCommon(tag) {
     private var point = AnimatableElement<Point>(
@@ -77,7 +78,7 @@ class RNMBXMovePointShapeAnimatorModule(
     }
 
     @ReactMethod
-    override fun create(tag: Double, startCoordinate: ReadableArray, promise: Promise) {
+    override fun create(tag: ViewRefTag, startCoordinate: ReadableArray, promise: Promise) {
         shapeAnimatorManager.add(
             MovePointShapeAnimator(
                 tag.toLong(),
@@ -92,7 +93,7 @@ class RNMBXMovePointShapeAnimatorModule(
 
     @ReactMethod
     override fun moveTo(
-        tag: Double,
+        tag: ViewRefTag,
         coordinate: ReadableArray?,
         duration: Double,
         promise: Promise?
diff --git a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/utils/ViewTagResolver.kt b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/utils/ViewTagResolver.kt
index c86a62c..07bac4d 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/utils/ViewTagResolver.kt
+++ b/node_modules/@rnmapbox/maps/android/src/main/java/com/rnmapbox/rnmbx/utils/ViewTagResolver.kt
@@ -16,6 +16,7 @@ data class ViewTagWaiter<V>(
 
 const val LOG_TAG = "ViewTagResolver"
 
+typealias ViewRefTag = Int
 // see https://github.com/rnmapbox/maps/pull/3074
 open class ViewTagResolver(val context: ReactApplicationContext) {
     private val createdViews: HashSet<Int> = hashSetOf<Int>()
diff --git a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeMapViewModuleSpec.java b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeMapViewModuleSpec.java
index 5014f4c..3081071 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeMapViewModuleSpec.java
+++ b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeMapViewModuleSpec.java
@@ -37,53 +37,53 @@ public abstract class NativeMapViewModuleSpec extends ReactContextBaseJavaModule
 
   @ReactMethod
   @DoNotStrip
-  public abstract void takeSnap(@Nullable Double viewRef, boolean writeToDisk, Promise promise);
+  public abstract void takeSnap(@Nullable Integer viewRef, boolean writeToDisk, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void queryTerrainElevation(@Nullable Double viewRef, ReadableArray coordinates, Promise promise);
+  public abstract void queryTerrainElevation(@Nullable Integer viewRef, ReadableArray coordinates, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void setSourceVisibility(@Nullable Double viewRef, boolean visible, String sourceId, String sourceLayerId, Promise promise);
+  public abstract void setSourceVisibility(@Nullable Integer viewRef, boolean visible, String sourceId, String sourceLayerId, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void getCenter(@Nullable Double viewRef, Promise promise);
+  public abstract void getCenter(@Nullable Integer viewRef, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void getCoordinateFromView(@Nullable Double viewRef, ReadableArray atPoint, Promise promise);
+  public abstract void getCoordinateFromView(@Nullable Integer viewRef, ReadableArray atPoint, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void getPointInView(@Nullable Double viewRef, ReadableArray atCoordinate, Promise promise);
+  public abstract void getPointInView(@Nullable Integer viewRef, ReadableArray atCoordinate, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void getZoom(@Nullable Double viewRef, Promise promise);
+  public abstract void getZoom(@Nullable Integer viewRef, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void getVisibleBounds(@Nullable Double viewRef, Promise promise);
+  public abstract void getVisibleBounds(@Nullable Integer viewRef, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void queryRenderedFeaturesAtPoint(@Nullable Double viewRef, ReadableArray atPoint, ReadableArray withFilter, ReadableArray withLayerIDs, Promise promise);
+  public abstract void queryRenderedFeaturesAtPoint(@Nullable Integer viewRef, ReadableArray atPoint, ReadableArray withFilter, ReadableArray withLayerIDs, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void queryRenderedFeaturesInRect(@Nullable Double viewRef, ReadableArray withBBox, ReadableArray withFilter, ReadableArray withLayerIDs, Promise promise);
+  public abstract void queryRenderedFeaturesInRect(@Nullable Integer viewRef, ReadableArray withBBox, ReadableArray withFilter, ReadableArray withLayerIDs, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void setHandledMapChangedEvents(@Nullable Double viewRef, ReadableArray events, Promise promise);
+  public abstract void setHandledMapChangedEvents(@Nullable Integer viewRef, ReadableArray events, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void clearData(@Nullable Double viewRef, Promise promise);
+  public abstract void clearData(@Nullable Integer viewRef, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void querySourceFeatures(@Nullable Double viewRef, String sourceId, ReadableArray withFilter, ReadableArray withSourceLayerIDs, Promise promise);
+  public abstract void querySourceFeatures(@Nullable Integer viewRef, String sourceId, ReadableArray withFilter, ReadableArray withSourceLayerIDs, Promise promise);
 }
diff --git a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXCameraModuleSpec.java b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXCameraModuleSpec.java
index 4cdf893..eb62c2f 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXCameraModuleSpec.java
+++ b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXCameraModuleSpec.java
@@ -37,5 +37,5 @@ public abstract class NativeRNMBXCameraModuleSpec extends ReactContextBaseJavaMo
 
   @ReactMethod
   @DoNotStrip
-  public abstract void updateCameraStop(@Nullable Double viewRef, ReadableMap stop, Promise promise);
+  public abstract void updateCameraStop(@Nullable Integer viewRef, ReadableMap stop, Promise promise);
 }
diff --git a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXChangeLineOffsetsShapeAnimatorModuleSpec.java b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXChangeLineOffsetsShapeAnimatorModuleSpec.java
index 2e04b9b..85b2a2c 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXChangeLineOffsetsShapeAnimatorModuleSpec.java
+++ b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXChangeLineOffsetsShapeAnimatorModuleSpec.java
@@ -36,17 +36,17 @@ public abstract class NativeRNMBXChangeLineOffsetsShapeAnimatorModuleSpec extend
 
   @ReactMethod
   @DoNotStrip
-  public abstract void create(double tag, ReadableArray coordinates, double startOffset, double endOffset, Promise promise);
+  public abstract void create(int tag, ReadableArray coordinates, double startOffset, double endOffset, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void setLineString(double tag, ReadableArray coordinates, double startOffset, double endOffset, Promise promise);
+  public abstract void setLineString(int tag, ReadableArray coordinates, double startOffset, double endOffset, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void setStartOffset(double tag, double offset, double duration, Promise promise);
+  public abstract void setStartOffset(int tag, double offset, double duration, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void setEndOffset(double tag, double offset, double duration, Promise promise);
+  public abstract void setEndOffset(int tag, double offset, double duration, Promise promise);
 }
diff --git a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXImageModuleSpec.java b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXImageModuleSpec.java
index 756e436..4dcd1dd 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXImageModuleSpec.java
+++ b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXImageModuleSpec.java
@@ -36,5 +36,5 @@ public abstract class NativeRNMBXImageModuleSpec extends ReactContextBaseJavaMod
 
   @ReactMethod
   @DoNotStrip
-  public abstract void refresh(@Nullable Double viewRef, Promise promise);
+  public abstract void refresh(@Nullable Integer viewRef, Promise promise);
 }
diff --git a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXMovePointShapeAnimatorModuleSpec.java b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXMovePointShapeAnimatorModuleSpec.java
index 4b52b8b..bc368a5 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXMovePointShapeAnimatorModuleSpec.java
+++ b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXMovePointShapeAnimatorModuleSpec.java
@@ -36,9 +36,9 @@ public abstract class NativeRNMBXMovePointShapeAnimatorModuleSpec extends ReactC
 
   @ReactMethod
   @DoNotStrip
-  public abstract void create(double tag, ReadableArray coordinate, Promise promise);
+  public abstract void create(int tag, ReadableArray coordinate, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void moveTo(double tag, ReadableArray coordinate, double duration, Promise promise);
+  public abstract void moveTo(int tag, ReadableArray coordinate, double duration, Promise promise);
 }
diff --git a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXPointAnnotationModuleSpec.java b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXPointAnnotationModuleSpec.java
index 060701f..7a07946 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXPointAnnotationModuleSpec.java
+++ b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXPointAnnotationModuleSpec.java
@@ -36,5 +36,5 @@ public abstract class NativeRNMBXPointAnnotationModuleSpec extends ReactContextB
 
   @ReactMethod
   @DoNotStrip
-  public abstract void refresh(@Nullable Double viewRef, Promise promise);
+  public abstract void refresh(@Nullable Integer viewRef, Promise promise);
 }
diff --git a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXShapeSourceModuleSpec.java b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXShapeSourceModuleSpec.java
index f0b8de3..a72efac 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXShapeSourceModuleSpec.java
+++ b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXShapeSourceModuleSpec.java
@@ -36,13 +36,13 @@ public abstract class NativeRNMBXShapeSourceModuleSpec extends ReactContextBaseJ
 
   @ReactMethod
   @DoNotStrip
-  public abstract void getClusterExpansionZoom(@Nullable Double viewRef, String featureJSON, Promise promise);
+  public abstract void getClusterExpansionZoom(@Nullable Integer viewRef, String featureJSON, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void getClusterLeaves(@Nullable Double viewRef, String featureJSON, double number, double offset, Promise promise);
+  public abstract void getClusterLeaves(@Nullable Integer viewRef, String featureJSON, int number, int offset, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void getClusterChildren(@Nullable Double viewRef, String featureJSON, Promise promise);
+  public abstract void getClusterChildren(@Nullable Integer viewRef, String featureJSON, Promise promise);
 }
diff --git a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXTileStoreModuleSpec.java b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXTileStoreModuleSpec.java
index cf95bc7..c6a364b 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXTileStoreModuleSpec.java
+++ b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXTileStoreModuleSpec.java
@@ -41,5 +41,5 @@ public abstract class NativeRNMBXTileStoreModuleSpec extends ReactContextBaseJav
 
   @ReactMethod
   @DoNotStrip
-  public abstract void setOption(double tag, String key, String domain, ReadableMap value, Promise promise);
+  public abstract void setOption(int tag, String key, String domain, ReadableMap value, Promise promise);
 }
diff --git a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXViewportModuleSpec.java b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXViewportModuleSpec.java
index 2b565c4..dc9425f 100644
--- a/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXViewportModuleSpec.java
+++ b/node_modules/@rnmapbox/maps/android/src/main/old-arch/com/rnmapbox/rnmbx/NativeRNMBXViewportModuleSpec.java
@@ -37,13 +37,13 @@ public abstract class NativeRNMBXViewportModuleSpec extends ReactContextBaseJava
 
   @ReactMethod
   @DoNotStrip
-  public abstract void getState(@Nullable Double viewRef, Promise promise);
+  public abstract void getState(@Nullable Integer viewRef, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void transitionTo(@Nullable Double viewRef, ReadableMap state, ReadableMap transition, Promise promise);
+  public abstract void transitionTo(@Nullable Integer viewRef, ReadableMap state, ReadableMap transition, Promise promise);
 
   @ReactMethod
   @DoNotStrip
-  public abstract void idle(@Nullable Double viewRef, Promise promise);
+  public abstract void idle(@Nullable Integer viewRef, Promise promise);
 }

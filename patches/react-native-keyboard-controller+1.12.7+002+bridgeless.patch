diff --git a/node_modules/react-native-keyboard-controller/ios/views/KeyboardControllerView.mm b/node_modules/react-native-keyboard-controller/ios/views/KeyboardControllerView.mm
index 6828ccb..c36d057 100644
--- a/node_modules/react-native-keyboard-controller/ios/views/KeyboardControllerView.mm
+++ b/node_modules/react-native-keyboard-controller/ios/views/KeyboardControllerView.mm
@@ -25,8 +25,6 @@
 #import <react/renderer/components/reactnativekeyboardcontroller/Props.h>
 #import <react/renderer/components/reactnativekeyboardcontroller/RCTComponentViewHelpers.h>
 
-#import <React/RCTBridge+Private.h>
-
 #import "KeyboardControllerModule-Header.h"
 #import "RCTFabricComponentsPlugins.h"
 
@@ -79,14 +77,11 @@ - (instancetype)initWithFrame:(CGRect)frame
                                     .width = width,
                                     .x = x,
                                     .y = y}});
-            // TODO: use built-in _eventEmitter once NativeAnimated module will use
-            // ModernEventEmitter
-            RCTBridge *bridge = [RCTBridge currentBridge];
-            if (bridge) {
-              FocusedInputLayoutChangedEvent *inputChangedEvent =
+
+            FocusedInputLayoutChangedEvent *inputChangedEvent =
                   [[FocusedInputLayoutChangedEvent alloc] initWithReactTag:@(self.tag) event:event];
-              [bridge.eventDispatcher sendEvent:inputChangedEvent];
-            }
+            [self postNotificationForEventDispatcherObserversWithEvent:inputChangedEvent];
+
           }
         }
         onTextChangedHandler:^(NSString *text) {
@@ -97,14 +92,9 @@ - (instancetype)initWithFrame:(CGRect)frame
                     facebook::react::KeyboardControllerViewEventEmitter::OnFocusedInputTextChanged{
                         .text = std::string([text UTF8String])});
 
-            // TODO: use built-in _eventEmitter once NativeAnimated module will use
-            // ModernEventEmitter
-            RCTBridge *bridge = [RCTBridge currentBridge];
-            if (bridge) {
-              FocusedInputTextChangedEvent *textChangedEvent =
+            FocusedInputTextChangedEvent *textChangedEvent =
                   [[FocusedInputTextChangedEvent alloc] initWithReactTag:@(self.tag) text:text];
-              [bridge.eventDispatcher sendEvent:textChangedEvent];
-            }
+            [self postNotificationForEventDispatcherObserversWithEvent:textChangedEvent];
           }
         }
         onSelectionChangedHandler:^(NSDictionary *event) {
@@ -132,15 +122,11 @@ - (instancetype)initWithFrame:(CGRect)frame
                                     .end = facebook::react::KeyboardControllerViewEventEmitter::
                                         OnFocusedInputSelectionChangedSelectionEnd{
                                             .x = endX, .y = endY, .position = end}}});
-            // TODO: use built-in _eventEmitter once NativeAnimated module will use
-            // ModernEventEmitter
-            RCTBridge *bridge = [RCTBridge currentBridge];
-            if (bridge) {
-              FocusedInputSelectionChangedEvent *selectionChangedEvent =
+
+            FocusedInputSelectionChangedEvent *selectionChangedEvent =
                   [[FocusedInputSelectionChangedEvent alloc] initWithReactTag:@(self.tag)
                                                                         event:event];
-              [bridge.eventDispatcher sendEvent:selectionChangedEvent];
-            }
+            [self postNotificationForEventDispatcherObserversWithEvent:selectionChangedEvent];
           }
         }
         onFocusDidSet:^(NSDictionary *data) {
@@ -196,19 +182,14 @@ - (instancetype)initWithFrame:(CGRect)frame
                         .duration = [duration intValue],
                         .target = [target intValue]});
           }
-
-          // TODO: use built-in _eventEmitter once NativeAnimated module will use ModernEventEmitter
-          RCTBridge *bridge = [RCTBridge currentBridge];
-          if (bridge) {
-            KeyboardMoveEvent *keyboardMoveEvent =
+          KeyboardMoveEvent *keyboardMoveEvent =
                 [[KeyboardMoveEvent alloc] initWithReactTag:@(self.tag)
                                                       event:event
                                                      height:height
                                                    progress:progress
                                                    duration:duration
                                                      target:target];
-            [bridge.eventDispatcher sendEvent:keyboardMoveEvent];
-          }
+          [self postNotificationForEventDispatcherObserversWithEvent:keyboardMoveEvent];
         }
         onNotify:^(NSString *event, NSDictionary *data) {
           [KeyboardController.shared sendEvent:event body:data];
@@ -224,6 +205,15 @@ - (instancetype)initWithFrame:(CGRect)frame
   return self;
 }
 
+// TODO: use built-in _eventEmitter once NativeAnimated module will use ModernEventEmitter
+- (void)postNotificationForEventDispatcherObserversWithEvent:(NSObject<RCTEvent> *)event
+{
+  NSDictionary *userInfo = [NSDictionary dictionaryWithObjectsAndKeys:event, @"event", nil];
+  [[NSNotificationCenter defaultCenter] postNotificationName:@"RCTNotifyEventDispatcherObserversOfEvent_DEPRECATED"
+                                                      object:nil
+                                                    userInfo:userInfo];
+}
+
 - (void)updateProps:(Props::Shared const &)props oldProps:(Props::Shared const &)oldProps
 {
   const auto &oldViewProps = *std::static_pointer_cast<const KeyboardControllerViewProps>(_props);

diff --git a/node_modules/expo-asset/build/PlatformUtils.web.js b/node_modules/expo-asset/build/PlatformUtils.web.js
index 7cae124..986bb0c 100644
--- a/node_modules/expo-asset/build/PlatformUtils.web.js
+++ b/node_modules/expo-asset/build/PlatformUtils.web.js
@@ -1,3 +1,19 @@
+import {requireOptionalNativeModule} from 'expo-modules-core';
+import Constants, {AppOwnership} from 'expo-constants';
+
+const ExpoUpdates = requireOptionalNativeModule('ExpoUpdates');
+const isRunningInExpoGo = Constants.appOwnership === AppOwnership.Expo;
+// expo-updates (and Expo Go expo-updates override) manages assets from updates and exposes
+// the ExpoUpdates.localAssets constant containing information about the assets.
+const expoUpdatesIsInstalledAndEnabled = !!ExpoUpdates?.isEnabled;
+const expoUpdatesIsUsingEmbeddedAssets = ExpoUpdates?.isUsingEmbeddedAssets;
+// if expo-updates is installed but we're running directly from the embedded bundle, we don't want
+// to override the AssetSourceResolver.
+const shouldUseUpdatesAssetResolution = expoUpdatesIsInstalledAndEnabled && !expoUpdatesIsUsingEmbeddedAssets;
+// Expo Go always uses the updates module for asset resolution (local assets) since it
+// overrides the expo-updates module.
+export const IS_ENV_WITH_LOCAL_ASSETS = isRunningInExpoGo || shouldUseUpdatesAssetResolution;
+
 export const IS_ENV_WITH_UPDATES_ENABLED = false;
 // Compute manifest base URL if available
 export const manifestBaseUrl = null;
